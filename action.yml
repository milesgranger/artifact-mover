
name: artifact-mover
description: move artifact(s) to or from S3 (more platforms to come)
inputs:
  action:
    description: |
      'download' or 'upload'
    required: true
  bucket: 
    description: Name of bucket to upload artifact to.
    required: true
  name: 
    description: Name of artifact to reference in this workflow.
    required: true
  path:
    description: |
      Path to artifact or directory of artifacts to upload.
      Note for downloading, this should always be a directory to unpack the artifact(s),
      whereas with uploading, this can either be a directory to recursively upload or a
      path to a single artifact.
    required: true
  profile:
    description: |
      Name of AWS profile to use, defaults to 'default'. Attempting to
      use current environment to configure credentials. For example setting
      AWS_ACCESS_KEY_ID and AWS_SECRESS_ACCESS_KEY or the ~/.aws/credentials file
    required: false
    default: default
  prefix-key:
    description: |
      Any prefix to add to the auto-generated path to artifact(s) on S3 bucket.
      Only relavant for uploading. 
    required: false
    default: artifacts
  identifier:
    description: |
      Unique id to this workflow, recommend keeping the default setting unless you know
      what you're doing
    default: ${{ github.repository }}/${{ github.run_number }}
  version:
    description: version of artifact-mover to use, recommended to use default here
    default: v0.1.0

runs:
  using: composite
  steps:
    - uses: dtolnay/rust-toolchain@stable
      if: ${{ inputs.version == 'main' }}
        
    - shell: bash
      if: ${{ inputs.version == 'main' }}
      run: |
        cargo run --release -- \
          --bucket ${{ inputs.bucket }} \
          --name ${{ inputs.name }} \
          --path ${{ inputs.path }} \
          --identifier ${{ inputs.identifier }} \
          --profile ${{ inputs.profile }} \
          --prefix-key ${{ inputs.prefix-key }} \
          ${{ inputs.action }} 

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os == 'macOS' && runner.arch == 'ARM64' }}
      run: |
        echo URL="https://github.com/milesgranger/artifact-mover/releases/download/${{ inputs.version }}/artifact-mover-aarch64-apple-darwin.zip" >> $GITHUB_ENV

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os == 'macOS' && runner.arch == 'x64' }}
      run: |
        echo URL="https://github.com/milesgranger/artifact-mover/releases/download/${{ inputs.version }}/artifact-mover-x86_64-apple-darwin.zip" >> $GITHUB_ENV

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os == 'Windows' && runner.arch == 'x64' }}
      run: |
        echo URL="https://github.com/milesgranger/artifact-mover/releases/download/${{ inputs.version }}/artifact-mover-x86_64-pc-windows-msvc.zip" >> $GITHUB_ENV

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os == 'Linux' && runner.arch == 'x64' }}
      run: |
        echo URL="https://github.com/milesgranger/artifact-mover/releases/download/${{ inputs.version }}/artifact-mover-x86_64-unknown-linux-gnu.zip" >> $GITHUB_ENV

    - shell: bash
      if: inputs.version != 'main'
      run: |
        set -x

        curl \
          -Lo artifact-mover.zip \
          --retry 5 \
          --connect-timeout 10 \
          --retry-connrefused \
          --retry-delay 2 \
          $URL

        unzip -o artifact-mover.zip
        chmod +x ./artifact-mover

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os != 'Windows' }}
      run: |
        ./artifact-mover \
          --bucket ${{ inputs.bucket }} \
          --name ${{ inputs.name }} \
          --path ${{ inputs.path }} \
          --identifier ${{ inputs.identifier }} \
          --profile ${{ inputs.profile }} \
          --prefix-key ${{ inputs.prefix-key }} \
          ${{ inputs.action }} 

    - shell: bash
      if: ${{ inputs.version != 'main' && runner.os == 'Windows' }}
      run: |
        ./artifact-mover.exe \
          --bucket ${{ inputs.bucket }} \
          --name ${{ inputs.name }} \
          --path ${{ inputs.path }} \
          --identifier ${{ inputs.identifier }} \
          --profile ${{ inputs.profile }} \
          --prefix-key ${{ inputs.prefix-key }} \
          ${{ inputs.action }} 
